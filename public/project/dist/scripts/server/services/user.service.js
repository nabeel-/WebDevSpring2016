module.exports=function(app,userModel){function authorized(req,res,next){req.isAuthenticated()?next():res.send(401)}function localStrategy(username,password,done){userModel.findUserByCredentials({username:username,password:password}).then(function(user){return user?done(null,user):done(null,!1)},function(err){return err?done(err):void 0})}function serializeUser(user,done){done(null,user)}function deserializeUser(user,done){userModel.findUserById(user._id).then(function(user){done(null,user)},function(err){done(err,null)})}function login(req,res){var user=req.user;res.json(user)}function logout(req,res){req.logOut(),res.send(200)}function loggedin(req,res){console.log(req.user),res.send(req.isAuthenticated()?req.user:"0")}function register(req,res){var resp=userModel.createUser(req.body);resp.then(function(user){res.send(user)},function(err){res.status(400).send(err)})}function deleteUserById(req,res){userModel.deleteUserById(req.params.id);resp.then(function(user){res.send(user)},function(err){res.status(400).send(err)})}function findUserById(req,res){var resp=userModel.findUserById(req.params.id);resp.then(function(user){res.send(user)},function(err){res.status(400).send(err)})}function updateUserById(req,res){var resp=userModel.updateUserById(req.params.id,req.body);resp.then(function(user){res.send(user)},function(err){res.status(400).send(err)})}var passport=require("passport"),auth=authorized;app.post("/api/project/login",passport.authenticate("local"),login),app.post("/api/project/logout",logout),app.post("/api/project/register",register),app.post("/api/project/user",auth,register),app.get("/api/project/loggedin",loggedin),app.put("/api/project/user/:id",auth,updateUserById),app["delete"]("/api/project/user/:id",auth,deleteUserById),app.get("/api/project/user/:id",findUserById);var LocalStrategy=require("passport-local").Strategy;passport.use("local",new LocalStrategy(localStrategy)),passport.serializeUser(serializeUser),passport.deserializeUser(deserializeUser)};